pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  environment {
    DOCKERHUB_CREDENTIALS = credentials('gautham-dockerhub')
  }
  stages {
    stage('Build') {
      steps {
        sh 'docker build -t gauti091/user-management user.session.management/'
      }
    }
    stage('Initialize') {
            steps {
                //enable remote triggers
                script {
                    properties([pipelineTriggers([pollSCM('H/1 * * * *')])])
                }
                //define scm connection for polling
                git branch: 'ci-cd-setup' , url: 'https://github.com/airavata-courses/terra.git'
            }
        }
    stage('Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Push') {
      steps {
        sh 'docker push gauti091/user-management'
      }
    }
    stage('login server'){
         steps{
            sshagent(credentials:['kuber']){
               sh 'ssh  -o StrictHostKeyChecking=no  ubuntu@149.165.153.12 uptime "whoami"'
               sh 'whoami'
               sh 'll '
               sh 'cd "Kubernetes files"'
              //  sh 'sudo su'
               sh 'kubectl rollout restart deployment/dataretrieval'

              //  sh 'sudo -S kubectl rollout restart deployment/dataretrieval'
          }
        echo "success lgoin"
         }
       }
  }
  post {
    always {
      sh 'docker logout'
    }
  }
}

pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  environment {
    DOCKERHUB_CREDENTIALS = credentials('gautham-dockerhub')
  }
  stages {
    stage('Build') {
      steps {
        sh 'docker build -t gauti091/user-management user.session.management/'
      }
    }
    stage('Initialize') {
            steps {
                //enable remote triggers
                script {
                    properties([pipelineTriggers([pollSCM('* * * * *')])])
                }
                //define scm connection for polling
                git branch: 'ci-cd-setup' , url: 'https://github.com/airavata-courses/terra.git'
            }
        }
    stage('Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Push') {
      steps {
        sh 'docker push gauti091/user-management'
      }
    }
    stage('login server'){
         steps{
            sshagent(credentials:['kuber-root-some1']){
              // sh '''
              //   date
              //   ssh root@149.165.153.12 >> ENDSSH
              //       java -version
              //       date
              //       cd /tmp
              //       pwd
              //       whoami
              // ENDSSH
              // '''
              sh """ssh -tt root@149.165.153.12 -o "StrictHostKeyChecking no"  << EOF
                   kubectl get pods
                   kubectl rollout restart deployment/dataretrieval
                   whoami
                   pwd
                   exit
                   EOF"""
              //  sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
              //   sh 'chmod u+x /usr/local/bin/kubectl'  
              //   sh '/usr/local/bin/kubectl get pods'
              // sh 'kubectl get pods'
                // sh 'whoami'

               
              //  sh 'su jenkins -s /bin/bash'
              //  sh 'whoami'
              //  sh 'ls -al'
              //  sh 'pwd'
              //  sh "echo '$KUBECONFIG'"
              //  sh "export 'KUBECONFIG=config'"
              //  sh 'echo "$KUBECONFIG"'
              //  sh 'sudo su'
              // sh 'cd "Kubernetes files"'
              // sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
              // sh 'chmod u+x ./kubectl'  
              // sh '''
              //     #!/bin/sh
              //     sudo su
              //     kubectl rollout restart deployment/dataretrieval
              //     '''
              // sh './kubectl apply -f MySQLService.yaml'
              // sh './kubectl cluster-info'
              // // sh './kubectl get pods'
              // //  sh './kubectl get pods'

              // //  sh './kubectl get pods'
              //  sh './kubectl rollout restart deployment/dataretrieval'
          }
        echo "success lgoin"
         }
       }
  }
  post {
    always {
      sh 'docker logout'
    }
  }
}
